-- Create tables in order of dependencies (no foreign keys first)

-- 1. Regions table (no dependencies)
CREATE TABLE regions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nom VARCHAR2(255),
    code VARCHAR2(255),
    localisation VARCHAR2(255),
    responsable VARCHAR2(255),
    created_at TIMESTAMP
);

-- 2. Utilisateurs table (no dependencies)
CREATE TABLE utilisateurs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nom VARCHAR2(255) NOT NULL,
    prenom VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) NOT NULL UNIQUE,
    password VARCHAR2(255) NOT NULL,
    role VARCHAR2(20),
    created_at TIMESTAMP,
    last_connection TIMESTAMP,
    status NUMBER(1) DEFAULT 0 -- 0=false, 1=true
);

-- 3. Type_operations table (no dependencies)
CREATE TABLE type_operations (
    code VARCHAR2(255) PRIMARY KEY,
    nom VARCHAR2(255),
    description VARCHAR2(500)
);

-- 4. Puits table (depends on regions)
CREATE TABLE puits (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nom VARCHAR2(255),
    type VARCHAR2(255),
    region_id NUMBER,
    coord_x NUMBER,
    coord_y NUMBER,
    statut VARCHAR2(20),
    created_by VARCHAR2(255),
    created_at TIMESTAMP,
    CONSTRAINT fk_puits_region FOREIGN KEY (region_id) REFERENCES regions(id)
);

-- 5. Forages table (depends on puits)
CREATE TABLE forages (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cout NUMBER,
    date_debut DATE,
    date_fin DATE,
    puit_id NUMBER,
    CONSTRAINT fk_forages_puit FOREIGN KEY (puit_id) REFERENCES puits(id)
);

-- 6. Reservoirs table (depends on puits)
CREATE TABLE reservoirs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    puit_id NUMBER,
    nom VARCHAR2(255),
    natureFluide VARCHAR2(255),
    hauteurUtile NUMBER,
    contactFluide VARCHAR2(255),
    netPay NUMBER,
    debit NUMBER,
    pressionTete NUMBER,
    CONSTRAINT fk_reservoirs_puit FOREIGN KEY (puit_id) REFERENCES puits(id)
);

-- 7. Phases table (depends on forages)
CREATE TABLE phases (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    forage_id NUMBER,
    numero_phase NUMBER,
    diametre VARCHAR2(10),
    description VARCHAR2(500),
    profondeur_prevue NUMBER,
    profondeur_reelle NUMBER,
    date_debut_prevue DATE,
    date_debut_reelle DATE,
    date_fin_prevue DATE,
    date_fin_reelle DATE,
    CONSTRAINT fk_phases_forage FOREIGN KEY (forage_id) REFERENCES forages(id)
);

-- 8. Type_indicateurs table (depends on type_operations)
CREATE TABLE type_indicateurs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nom VARCHAR2(255),
    unite VARCHAR2(255),
    type_operation_code VARCHAR2(255),
    estObligatoire NUMBER(1) DEFAULT 0, -- 0=false, 1=true
    CONSTRAINT fk_type_indicateurs_type_op FOREIGN KEY (type_operation_code) REFERENCES type_operations(code)
);

-- 9. Operations table (depends on phases, type_operations, utilisateurs)
CREATE TABLE operations (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    phase_id NUMBER,
    type_operation_code VARCHAR2(255),
    description VARCHAR2(500),
    statut VARCHAR2(20),
    cout_prevu NUMBER,
    cout_reel NUMBER,
    created_by NUMBER,
    created_at TIMESTAMP,
    CONSTRAINT fk_operations_phase FOREIGN KEY (phase_id) REFERENCES phases(id),
    CONSTRAINT fk_operations_type_op FOREIGN KEY (type_operation_code) REFERENCES type_operations(code),
    CONSTRAINT fk_operations_user FOREIGN KEY (created_by) REFERENCES utilisateurs(id)
);

-- 10. Indicateurs table (depends on operations, type_indicateurs)
CREATE TABLE indicateurs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operation_id NUMBER,
    type_indicateur_id NUMBER,
    valeur_prevue NUMBER,
    valeur_reelle NUMBER,
    date_mesure TIMESTAMP,
    commentaire VARCHAR2(1000),
    CONSTRAINT fk_indicateurs_operation FOREIGN KEY (operation_id) REFERENCES operations(id),
    CONSTRAINT fk_indicateurs_type FOREIGN KEY (type_indicateur_id) REFERENCES type_indicateurs(id)
);

-- 11. Problemes table (depends on operations, utilisateurs)
CREATE TABLE problemes (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operation_id NUMBER,
    type VARCHAR2(20),
    signale_par NUMBER,
    resolu_par NUMBER,
    description VARCHAR2(1000),
    date_detection DATE,
    date_resolution DATE,
    gravite VARCHAR2(20),
    solution_propose VARCHAR2(1000),
    solution_implemente VARCHAR2(1000),
    statut VARCHAR2(20),
    impact_delai NUMBER,
    impact_cout NUMBER,
    CONSTRAINT fk_problemes_operation FOREIGN KEY (operation_id) REFERENCES operations(id),
    CONSTRAINT fk_problemes_signale FOREIGN KEY (signale_par) REFERENCES utilisateurs(id),
    CONSTRAINT fk_problemes_resolu FOREIGN KEY (resolu_par) REFERENCES utilisateurs(id)
);

-- 12. Documents table (depends on puits, phases, operations, utilisateurs)
CREATE TABLE documents (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    puit_id NUMBER,
    phase_id NUMBER,
    operation_id NUMBER,
    nom VARCHAR2(255),
    type VARCHAR2(255),
    chemin VARCHAR2(500),
    taille NUMBER,
    date_upload TIMESTAMP,
    uploade_par NUMBER,
    description VARCHAR2(1000),
    est_public NUMBER(1) DEFAULT 0, -- 0=false, 1=true
    CONSTRAINT fk_documents_puit FOREIGN KEY (puit_id) REFERENCES puits(id),
    CONSTRAINT fk_documents_phase FOREIGN KEY (phase_id) REFERENCES phases(id),
    CONSTRAINT fk_documents_operation FOREIGN KEY (operation_id) REFERENCES operations(id),
    CONSTRAINT fk_documents_user FOREIGN KEY (uploade_par) REFERENCES utilisateurs(id)
);

-- 13. Books table (standalone)
CREATE TABLE books (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(255),
    author VARCHAR2(255),
    year NUMBER
);

-- Create indexes for better performance
CREATE INDEX idx_puits_region ON puits(region_id);
CREATE INDEX idx_forages_puit ON forages(puit_id);
CREATE INDEX idx_phases_forage ON phases(forage_id);
CREATE INDEX idx_operations_phase ON operations(phase_id);
CREATE INDEX idx_operations_type ON operations(type_operation_code);
CREATE INDEX idx_indicateurs_operation ON indicateurs(operation_id);
CREATE INDEX idx_problemes_operation ON problemes(operation_id);
CREATE INDEX idx_documents_puit ON documents(puit_id);
CREATE INDEX idx_documents_phase ON documents(phase_id);
CREATE INDEX idx_documents_operation ON documents(operation_id);

-- Create sequences (if not using IDENTITY columns)
-- These are automatically created with GENERATED BY DEFAULT AS IDENTITY

COMMIT;
